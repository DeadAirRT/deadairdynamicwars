<?xml version="1.0" encoding="utf-8"?>
<mdscript name="DynamicWarDiplomacy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="Init" instantiate="false">
			<actions>
				<include_actions ref="Lib_GetFactions"/>
				<do_if value="(not md.$DADynWarFavors?)">
					<set_value name="md.$DADynWarFavors" exact="table[]"/>
				</do_if>
			</actions>
			<cues>
				<cue name="DeadAir">
					<actions>
						<set_value name="DeadAir.$DynamicWarDiplomacyFaction" exact="$FactionList.{1}"/>
						<set_value name="$IncreaseRelationsNumber" exact="5"/>
						<set_value name="$DecreaseRelationsNumber" exact="-5"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Ready for variable storage'.[player.age]" context="false" filter="scripts"/>
						<set_value name="$DynamicWarDiplomacyDebugChance" exact="false"/>
					</actions>
				</cue>
				<cue name="Register_Options_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled cue="md.Simple_Menu_API.Reloaded"/>
					</conditions>
					<actions>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[$id = 'diplomacy_menu', $columns = 2, $title   = {33232471,501}, $onOpen  = Main_Menu ]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'increase_relations_menu',
								$columns = 12, 
								$title   = {33232471,502},
								$onOpen  = Increase_Relations_menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'decrease_relations_menu',
								$columns = 12, 
								$title   = {33232471,503},
								$onOpen  = Decrease_Relations_menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'recent_news_menu',
								$columns = 8, 
								$title   = {33232471,504},
								$onOpen  = Recent_News_menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'milstrengthmenu',
								$columns = 8, 
								$title   = {33232471,403},
								$onOpen  = MilStrength_Menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'econstrengthmenu',
								$columns = 8, 
								$title   = {33232471,404},
								$onOpen  = EconStrength_Menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'econdetailsmenu',
								$columns = 12, 
								$title   = {33232471,421},
								$onOpen  = EconDetails_Menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'resourcefullness',
								$columns = 12, 
								$title   = {33232471,425},
								$onOpen  = ResourceFullness_Menu,
								$private = 1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[
								$id      = 'optionsmenu',
								$columns = 8, 
								$title   = {1001,2600},
								$onOpen  = Options_Menu,
								$private = 1,
							]"/>
					</actions>
				</cue>
				<cue name="Main_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="not $DynamicWarDiplomacyDebugChance?">
							<set_value name="$DynamicWarDiplomacyDebugChance" exact="false"/>
						</do_if>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,502}, $id='increase_relations_menu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,503}, $id='decrease_relations_menu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,504}, $id='recent_news_menu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,403}, $id='milstrengthmenu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,404}, $id='econstrengthmenu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,421}, $id='econdetailsmenu']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={33232471,425}, $id='resourcefullness']"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Submenu_Link" param="table[$text={1001,2600}, $id='optionsmenu']"/>
					</actions>
				</cue>
				<cue name="Increase_Relations_menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$WhatFactions" exact="'ChangeRelations'"/>
						<include_actions ref="Lib_Add_Faction_Dropdown"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=3,	$halign='center', $text = {1001,43},]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 4, $colSpan=4,	$halign='center', $text = {33232471,402},]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=2,	$halign='center', $text = {1001,2926},]"/>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction != null">
							<do_all exact="$FactionList.count" counter="$A">
								<set_value name="$FactionOne" exact="DeadAir.$DynamicWarDiplomacyFaction"/>
								<set_value name="$FactionTwo" exact="$FactionList.{$A}"/>
								<do_if value="($FactionOne != $FactionTwo) and ($FactionTwo.isactive) and (not $ExcludedFactions.indexof.{$FactionTwo})">
									<!-- Faction name - Current Relations - Increase Relations Option - Cost - Buy +5 -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
									<!-- $col 1 + 2 + 3 -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=3,	$halign='left', $text = $FactionTwo.knownname,]"/>
									<!-- $col 4 & $col 5 + 6 + 7 -->
									<include_actions ref="Lib_FactionRelationBar"/>
									<do_if value="$FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue + $IncreaseRelationsNumber le 25">
										<include_actions ref="Lib_Relation_Increase_Cost"/>
										<!-- $col 8 + 9 -->
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=2, $halign='right', $text = '%1 %2'.[($IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo} / 100),{1001,101}],]"/>
										<do_if value="player.money ge $IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}">
											<!-- $col 10 + 11 + 12 -->
											<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
												$col = 10,
												$colSpan=3,
												$text = table[
												  $text   =  {33232471,507}, 
												  $color  = 'Helper.color.green',
												  $halign = 'center',
												],
												$onClick = IncreaseRelationsOption,
												$onRightClick = IncreaseRelationsOption,
												$echo = [DeadAir.$DynamicWarDiplomacyFaction, $FactionList.{$A}],
												]"/>
										</do_if>
										<do_else>
											<!-- $col 10 + 11 + 12 -->
											<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 10, $colSpan=3, $halign = 'center', $text = {33232471,506},]"/>
										</do_else>
									</do_if>
									<do_else>
										<!-- $col 8 + 9 + 10 + 11 + 12 -->
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=5, $halign = 'center', $text = {33232471,505},]"/>
									</do_else>
								</do_if>
							</do_all>
						</do_if>
					</actions>
				</cue>
				<cue name="Decrease_Relations_menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$WhatFactions" exact="'ChangeRelations'"/>
						<include_actions ref="Lib_Add_Faction_Dropdown"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=3,	$halign='center', $text = {1001,43},]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 4, $colSpan=4,	$halign='center', $text = {33232471,402},]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=2,	$halign='center', $text = {1001,2926},]"/>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction != null">
							<do_all exact="$FactionList.count" counter="$A">
								<set_value name="$FactionOne" exact="DeadAir.$DynamicWarDiplomacyFaction"/>
								<set_value name="$FactionTwo" exact="$FactionList.{$A}"/>
								<do_if value="($FactionOne != $FactionTwo) and ($FactionTwo.isactive) and (not $ExcludedFactions.indexof.{$FactionTwo})">
									<!-- Faction name - Current Relations - Decrease Relations Option - Cost - Buy -5 -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
									<!-- $col 1 + 2 + 3 -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=3,	$halign='left', $text = $FactionTwo.knownname,]"/>
									<!-- $col 4 & $col 5 + 6 + 7 -->
									<include_actions ref="Lib_FactionRelationBar"/>
									<do_if value="($FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue + $DecreaseRelationsNumber ge -25) and (($FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue * -1) le $FactionOne.relation.{$FactionOne.relationto.{faction.player}}.uivalue)">
										<include_actions ref="Lib_Relation_Decrease_Cost"/>
										<!-- $col 8 + 9 -->
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=2, $halign='right', $text = '%1 %2'.[($DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo} / 100),{1001,101}],]"/>
										<do_if value="player.money ge $DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}">
											<!-- $col 10 + 11 + 12 -->
											<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
												$col = 10,
												$colSpan=3,
												$text = table[
												  $text   =  {33232471,508}, 
												  $color  = 'Helper.color.green',
												  $halign = 'center',
												],
												$onClick = DecreaseRelationsOption,
												$onRightClick = DecreaseRelationsOption,
												$echo = [DeadAir.$DynamicWarDiplomacyFaction, $FactionList.{$A}],
												]"/>
										</do_if>
										<do_else>
											<!-- $col 10 + 11 + 12 -->
											<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 10, $colSpan=3, $halign = 'center', $text = {33232471,506},]"/>
										</do_else>
									</do_if>
									<do_else>
										<!-- $col 8 + 9 + 10 + 11 + 12 -->
										<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=5, $halign = 'center', $text = {33232471,505},]"/>
									</do_else>
								</do_if>
							</do_all>
						</do_if>
					</actions>
				</cue>
				<cue name="Recent_News_menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=2,	$halign='center', $text = {1001,24}]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 3, $colSpan=6,	$halign='center', $text = {1001,5721}]"/>
						<!-- md.DADynWarNews.{Index} == [Player.age, Message] -->
						<do_if value="md.$DADynWarNews.{1}?">
							<do_all exact="md.$DADynWarNews.keys.count" counter="$index">
								<set_value name="$Time" exact="md.$DADynWarNews.{$index}.{1}"/>
								<set_value name="$Message" exact="md.$DADynWarNews.{$index}.{2}"/>
								<do_if value="($Time != null) and ($Message != null)">
									<!-- Relative Time - Message -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
									<!-- $col 1 + 2 -->
									<!-- This is in seconds ago for now -->
									<set_value name="$RelativeTime" exact="player.age - $Time"/>
									<set_value name="$RelativeTimeFormatted" exact="$RelativeTime.formatted.{'%dd:%Hh:%Mm'}"/>
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=2,	$halign='left', $text = $RelativeTimeFormatted, $wordwrap = true]"/>
									<!-- $col 3 - 8 -->
									<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 3, $colSpan=6, $halign='left', $text = $Message, $wordwrap = true]"/>
									<remove_value name="$Time"/>
									<remove_value name="$Message"/>
									<remove_value name="$RelativeTime"/>
									<remove_value name="$RelativeTimeFormatted"/>
								</do_if>
							</do_all>
						</do_if>
						<do_else>
							<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=8,	$halign='center', $text = {1099,16}]"/>
						</do_else>
					</actions>
				</cue>
				<cue name="MilStrength_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$WhatFactions" exact="'All'"/>
						<include_actions ref="Lib_GetFactions"/>
						<do_all exact="$FactionList.count" counter="$FactionOneCounter">
							<set_value name="$FactionOne" exact="$FactionList.{$FactionOneCounter}"/>
							<do_if value="($FactionOne.isactive)">
								<include_actions ref="Lib_AddFactionMilStrengthRows"/>
							</do_if>
						</do_all>
					</actions>
				</cue>
				<cue name="EconStrength_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$WhatFactions" exact="'All'"/>
						<include_actions ref="Lib_GetFactions"/>
						<do_all exact="$FactionList.count" counter="$FactionOneCounter">
							<set_value name="$FactionOne" exact="$FactionList.{$FactionOneCounter}"/>
							<do_if value="($FactionOne.isactive)">
								<include_actions ref="Lib_AddFactionEconStrengthRows"/>
							</do_if>
						</do_all>
					</actions>
				</cue>
				<!-- This code was done by SirNukes, all credit given -->
				<cue name="EconDetails_Menu" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction == null">
							<set_value name="DeadAir.$DynamicWarDiplomacyFaction" exact="$FactionList.{1}"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
						<set_value name="$wares_existing" exact="table[]"/>
						<set_value name="$wares_wanted" exact="table[]"/>
						<!--Get all stations and their build storage. -->
						<set_value name="$include_buildstorage" exact="true"/>
						<include_actions ref="Lib_Get_Stations"/>
						<!--Main loop to gather info.-->
						<do_for_each name="$cont" in="$stations">
							<!--Go through resources.-->
							<do_for_each name="$ware" in="$cont.resources.list">
								<set_value name="$wares_existing.{$ware}" exact="$cont.cargo.{$ware}.count" operation="add"/>
								<set_value name="$wares_wanted.{$ware}" exact="$cont.cargo.{$ware}.target" operation="add"/>
							</do_for_each>
							<!--Go through products.-->
							<do_for_each name="$ware" in="$cont.products.list">
								<set_value name="$wares_existing.{$ware}" exact="$cont.cargo.{$ware}.count" operation="add"/>
								<set_value name="$wares_wanted.{$ware}" exact="0" operation="add"/>
							</do_for_each>
							<!--Tradewares are those that are not product or resource.-->
							<do_for_each name="$ware" in="$cont.tradewares.list">
								<set_value name="$wares_existing.{$ware}" exact="$cont.cargo.{$ware}.count" operation="add"/>
								<set_value name="$wares_wanted.{$ware}" exact="0" operation="add"/>
							</do_for_each>
							<!--Supply storage has stuff like drones and such. TODO.-->
						</do_for_each>
						<!--Add all trade ships. -->
						<include_actions ref="Lib_Get_Ships"/>
						<do_for_each name="$ship" in="$ships">
							<do_for_each name="$ware" valuename="$amount" in="$ship.cargo.table">
								<set_value name="$wares_existing.{$ware}" exact="$amount" operation="add"/>
								<set_value name="$wares_wanted.{$ware}" exact="0" operation="add"/>
							</do_for_each>
						</do_for_each>
						<set_value name="$WhatFactions" exact="'DetailView'"/>
						<include_actions ref="Lib_Add_Faction_Dropdown"/>
						<!--Header row.-->
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$selectable = false]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=4, $text = {1001,45},]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 5, $colSpan=8, $text = {33232471,509},]"/>
						<set_value name="$thickness" exact="2"/>
						<include_actions ref="Lib_Add_Horizontal_Line"/>
						<!--Create the menu rows.-->
						<do_for_each name="$ware" valuename="$wanted" in="$wares_wanted">
							<set_value name="$exists" exact="$wares_existing.{$ware}"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=4, $text = $ware.name,]"/>
							<!--Will use a status bar. Max point is the resource capacity. Current value is the total existing.
							If existing > capacity, the bar will rescale with the max point marker moving inside.
							'start' set to half of wanted, so if the universe has less then half the wanted amount, the bar goes red. -->
							<!-- Colors by deadair -->
							<do_if value="$wanted == 0">
								<set_value name="$vcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$pcolor" exact="'Helper.color.blue'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_if>
							<do_elseif value="$exists ge $wanted">
								<set_value name="$vcolor" exact="'Helper.color.blue'"/>
								<set_value name="$pcolor" exact="'Helper.color.green'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$exists lt ($wanted * 0.25)">
								<set_value name="$vcolor" exact="'Helper.color.red'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$exists lt ($wanted * 0.5)">
								<set_value name="$vcolor" exact="'Helper.color.darkorange'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$exists lt ($wanted * 0.75)">
								<set_value name="$vcolor" exact="'Helper.color.orange'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$exists lt $wanted">
								<set_value name="$vcolor" exact="'Helper.color.brightyellow'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_StatusBar" param="table[
									$col			= 5, 
									$colSpan		= 8,
									$scaling		= true,
									$type			= 'statusbar',
									$start			= $wanted,
									$current		= $exists,
									$max			= $wanted,
									$valueColor		= $vcolor,
									$posChangeColor	= $pcolor,
									$negChangeColor	= $ncolor,
									$mouseOverText = '%s: %s / %s: %s'.[{1001,1406},$exists,{1001,2903},$wanted],
								]"/>
						</do_for_each>
					</actions>
				</cue>
				<cue name="ResourceFullness_Menu" instantiate="true" namespace="this">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction == null">
							<set_value name="DeadAir.$DynamicWarDiplomacyFaction" exact="$FactionList.{1}"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
						<set_value name="$res_existing" exact="table[]"/>
						<set_value name="$res_wanted" exact="table[]"/>
						<set_value name="$pro_existing" exact="table[]"/>
						<set_value name="$pro_wanted" exact="table[]"/>
						<!--Get all stations and their build storage. -->
						<set_value name="$include_buildstorage" exact="true"/>
						<include_actions ref="Lib_Get_Stations"/>
						<!--Main loop to gather info.-->
						<do_for_each name="$cont" in="$stations">
							<!--Go through resources.-->
							<do_for_each name="$ware" in="$cont.resources.list">
								<set_value name="$res_existing.{$ware}" exact="$cont.cargo.{$ware}.count" operation="add"/>
								<set_value name="$res_wanted.{$ware}" exact="$cont.cargo.{$ware}.target" operation="add"/>
								<set_value name="$pro_existing.{$ware}" exact="0" operation="add"/>
								<set_value name="$pro_wanted.{$ware}" exact="0" operation="add"/>
							</do_for_each>
							<!--Go through products.-->
							<do_for_each name="$ware" in="$cont.products.list">
								<set_value name="$res_existing.{$ware}" exact="0" operation="add"/>
								<set_value name="$res_wanted.{$ware}" exact="0" operation="add"/>
								<set_value name="$pro_existing.{$ware}" exact="$cont.cargo.{$ware}.count" operation="add"/>
								<set_value name="$pro_wanted.{$ware}" exact="$cont.cargo.{$ware}.target" operation="add"/>
							</do_for_each>
						</do_for_each>
						<set_value name="$WhatFactions" exact="'DetailView'"/>
						<include_actions ref="Lib_Add_Faction_Dropdown"/>
						<!--Header row.-->
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$selectable = false]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=2, $text = {1001,45},]"/><!-- Ware -->
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 3, $colSpan=5, $text = {33232471,510}, $mouseover = {33232471,509},]"/><!--Production-->
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=5, $text = {33232471,511}, $mouseover = {33232471,509},]"/><!--Consumption-->
						<set_value name="$thickness" exact="2"/>
						<include_actions ref="Lib_Add_Horizontal_Line"/>
						<!--Create the menu rows.-->
						<do_for_each name="$ware" in="$res_wanted">
							<set_value name="$res_output" exact="$res_existing.{$ware}"/>
							<set_value name="$rescap_output" exact="$res_wanted.{$ware}"/>
							<set_value name="$pro_output" exact="$pro_existing.{$ware}"/>
							<set_value name="$procap_output" exact="$pro_wanted.{$ware}"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 1, $colSpan=2, $text = $ware.name,]"/>
							<!-- Production -->
							<do_if value="$procap_output == 0">
								<set_value name="$vcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_if>
							<do_else>
								<set_value name="$vcolor" exact="'Helper.color.blue'"/>
								<set_value name="$pcolor" exact="'Helper.color.blue'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_else>
							<do_if value="$procap_output">
								<signal_cue_instantly cue="md.Simple_Menu_API.Make_StatusBar" param="table[
									$col			= 3, 
									$colSpan		= 5,
									$scaling		= true,
									$type			= 'statusbar',
									$start			= $procap_output,
									$current		= $pro_output,
									$max			= $procap_output,
									$valueColor		= $vcolor,
									$posChangeColor	= $pcolor,
									$negChangeColor	= $ncolor,
									$mouseOverText = '%s: %s / %s: %s'.[{1001,1406},$pro_output,{1001,8393},$procap_output],
								]"/>
							</do_if>
							<do_else>
								<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 3, $colSpan=5, $halign = 'center', $text = {1001,9},]"/>
							</do_else>
							<!-- Consumption -->
							<do_if value="$rescap_output == 0">
								<set_value name="$vcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$pcolor" exact="'Helper.color.transparent'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_if>
							<do_else>
								<set_value name="$vcolor" exact="'Helper.color.blue'"/>
								<set_value name="$pcolor" exact="'Helper.color.blue'"/>
								<set_value name="$ncolor" exact="'Helper.color.transparent'"/>
							</do_else>
							<do_if value="$rescap_output">
								<signal_cue_instantly cue="md.Simple_Menu_API.Make_StatusBar" param="table[
									$col			= 8, 
									$colSpan		= 5,
									$scaling		= true,
									$type			= 'statusbar',
									$start			= $rescap_output,
									$current		= $res_output,
									$max			= $rescap_output,
									$valueColor		= $vcolor,
									$posChangeColor	= $pcolor,
									$negChangeColor	= $ncolor,
									$mouseOverText = '%s: %s / %s: %s'.[{1001,1406},$res_output,{1001,8393},$rescap_output],
								]"/>
							</do_if>
							<do_else>
								<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[$col = 8, $colSpan=5, $halign = 'center', $text = {1001,9},]"/>
							</do_else>
						</do_for_each>
					</actions>
				</cue>
				<cue name="Options_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="(not md.$DADynWarSCA?)">
							<set_value name="md.$DADynWarSCA" exact="true"/>
							<set_faction_relation_locked faction="faction.scaleplate" locked="true"/>
						</do_if>
						<do_if value="(not md.$DADynWarBUCLocked?)">
							<set_value name="md.$DADynWarBUCLocked" exact="true"/>
							<set_faction_relation_locked faction="faction.buccaneers" locked="true"/>
						</do_if>
						<do_if value="(not md.$DADynWarActivateFuneral?)">
							<set_value name="md.$DADynWarActivateFuneral" exact="false"/>
						</do_if>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 6,
								$text = {33232471,414},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
								$col = 7, 
								$colSpan = 2,
								$text = table[
								  $text   =  if md.$DADynWarEnable == true then {1001,4825} else {1001,8942}, 
								  $color  = 'Helper.color.green',
								  $halign = 'center',
								],
								$onClick = DADynWarEnable,
								$onRightClick = DADynWarEnable,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 6,
								$text = {33232471,412},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
								$col = 7, 
								$colSpan = 2,
								$text = table[
								  $text   =  if md.$DADynWarHAT == true then {1001,4825} else {1001,8942}, 
								  $color  = 'Helper.color.green',
								  $halign = 'center',
								],
								$onClick = DADynWarHAT,
								$onRightClick = DADynWarHAT,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 6,
								$text = {33232471,413},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
								$col = 7, 
								$colSpan = 2,
								$text = table[
								  $text   =  if md.$DADynWarSCA == true then {1001,4825} else {1001,8942}, 
								  $color  = 'Helper.color.green',
								  $halign = 'center',
								],
								$onClick = DADynWarSCA,
								$onRightClick = DADynWarSCA,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 6,
								$text = {33232471,423},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
								$col = 7, 
								$colSpan = 2,
								$text = table[
								  $text   =  if md.$DADynWarBUCLocked == true then {1001,4825} else {1001,8942}, 
								  $color  = 'Helper.color.green',
								  $halign = 'center',
								],
								$onClick = DADynWarBUCLocked,
								$onRightClick = DADynWarBUCLocked,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 6,
								$text = {33232471,424},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Button" param="table[
								$col = 7, 
								$colSpan = 2,
								$text = table[
								  $text   =  if md.$DADynWarActivateFuneral == true then {1001,4825} else {1001,8942}, 
								  $color  = 'Helper.color.green',
								  $halign = 'center',
								],
								$onClick = DADynWarActivateFuneral,
								$onRightClick = DADynWarActivateFuneral,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,415},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarBesties,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarBesties? then md.$DADynWarBesties else 1,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,416},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarBigBoost,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarBigBoost? then md.$DADynWarBigBoost else 16,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,417},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarSmallBoost,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarSmallBoost? then md.$DADynWarSmallBoost else 32,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,418},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarSmallBlow,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarSmallBlow? then md.$DADynWarSmallBlow else 32,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,419},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarBigBlow,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarBigBlow? then md.$DADynWarBigBlow else 16,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,420},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarNemesis,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarNemesis? then md.$DADynWarNemesis else 3,
								$step=1,
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1,
								$colSpan = 4,
								$text = {33232471,422},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
								$col=5,
								$colSpan=4,
								$onSliderCellConfirm=DADynWarNothing,
								$min=0,
								$minSelect=0,
								$max=100,
								$maxSelect=100,
								$exceedMaxValue=false,
								$start=if md.$DADynWarNothing? then md.$DADynWarNothing else 0,
								$step=1,
							]"/>
					</actions>
				</cue>
				<cue name="IncreaseRelationsOption" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$SelectedFactionOne" exact="event.param.$echo.{1}"/>
						<set_value name="$SelectedFactionTwo" exact="event.param.$echo.{2}"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- IncreaseRelationsOption -- %2 -- %3 -- %4'.[player.age,$SelectedFactionOne.knownname,$SelectedFactionTwo.knownname,$IncreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo}]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<set_value name="$UIRelationChange" exact="5"/>
						<include_actions ref="Lib_CalculateUiValueRepChange"/>
						<!-- Returns $NewAbsoluteRepValue and $AbsoluteRepValueChange -->
						<reward_player money="$IncreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} * -1"/>
						<do_if value="($IncreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} == 0) and (@md.$DADynWarFavors.{$SelectedFactionOne} gt 0) and ($SelectedFactionOne != faction.player)">
							<set_value name="md.$DADynWarFavors.{$SelectedFactionOne}" exact="[md.$DADynWarFavors.{$SelectedFactionOne} - 1,0].max"/>
							<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Used Favor -- %2 -- Favors: %3 -- %4'.[player.age,$SelectedFactionOne.knownname,md.$DADynWarFavors.{$SelectedFactionOne},$IncreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo}]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						</do_if>
						<set_faction_relation faction="$SelectedFactionOne" otherfaction="$SelectedFactionTwo" value="([$NewAbsoluteRepValue, 1].min)"/>
						<set_faction_relation faction="$SelectedFactionTwo" otherfaction="$SelectedFactionOne" value="([$NewAbsoluteRepValue, 1].min)"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DecreaseRelationsOption" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$SelectedFactionOne" exact="event.param.$echo.{1}"/>
						<set_value name="$SelectedFactionTwo" exact="event.param.$echo.{2}"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- DecreaseRelationsOption -- %2 -- %3 -- %4'.[player.age,$SelectedFactionOne.knownname,$SelectedFactionTwo.knownname,$DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo}]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<set_value name="$UIRelationChange" exact="-5"/>
						<include_actions ref="Lib_CalculateUiValueRepChange"/>
						<!-- Returns $NewAbsoluteRepValue and $AbsoluteRepValueChange -->
						<reward_player money="$DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} * -1"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- ($DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} * -1): %2 -- @md.$DADynWarFavors.{$SelectedFactionOne}: %3 -- $DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo}: %4 -- @md.$DADynWarFavors.{$SelectedFactionOne} gt 0: %5'.[player.age,($DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} * -1),@md.$DADynWarFavors.{$SelectedFactionOne},$DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo},@md.$DADynWarFavors.{$SelectedFactionOne} gt 0]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<do_if value="($DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo} == 0) and (@md.$DADynWarFavors.{$SelectedFactionOne} gt 0) and ($SelectedFactionOne != faction.player) and ($SelectedFactionTwo != faction.player)">
							<set_value name="md.$DADynWarFavors.{$SelectedFactionOne}" exact="[md.$DADynWarFavors.{$SelectedFactionOne} - 1,0].max"/>
							<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Used Favor -- %2 -- Favors: %3 -- %4'.[player.age,$SelectedFactionOne.knownname,md.$DADynWarFavors.{$SelectedFactionOne},$DecreaseRelationsCostTable.{$SelectedFactionOne}.{$SelectedFactionTwo}]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						</do_if>
						<set_faction_relation faction="$SelectedFactionOne" otherfaction="$SelectedFactionTwo" value="([$NewAbsoluteRepValue, -1].max)"/>
						<set_faction_relation faction="$SelectedFactionTwo" otherfaction="$SelectedFactionOne" value="([$NewAbsoluteRepValue, -1].max)"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="Handle_Option_Change" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="$args" exact="event.param"/>
						<do_if value="$args.$echo.$type == 'dropdown'">
							<set_value name="DeadAir.{$args.$echo.$name}" exact="$args.$option.$value"/>
						</do_if>
						<do_else>
							<set_value name="DeadAir.{$args.$echo.$name}" exact="$args.$echo.$value"/>
						</do_else>
						<do_if value="$args.$echo.$refresh">
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DADynWarHAT" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarHAT" exact="if md.$DADynWarHAT == true then false else true"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarSCA" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarSCA" exact="if md.$DADynWarSCA == true then false else true"/>
						<do_if value="md.$DADynWarSCA == false">
							<set_faction_relation_locked faction="faction.scaleplate" locked="false"/>
						</do_if>
						<do_else>
							<set_faction_relation_locked faction="faction.scaleplate" locked="true"/>
						</do_else>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarBUCLocked" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarBUCLocked" exact="if md.$DADynWarBUCLocked == true then false else true"/>
						<do_if value="md.$DADynWarBUCLocked == false">
							<set_faction_relation_locked faction="faction.buccaneers" locked="false"/>
						</do_if>
						<do_else>
							<set_faction_relation_locked faction="faction.buccaneers" locked="true"/>
						</do_else>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarActivateFuneral" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<find_sector name="$HeartOfAcrimonySector" macro="macro.Cluster_411_Sector001_macro"/>
						<find_gate name="$FuneralGate" accelerator="true" space="$HeartOfAcrimonySector"/>
						<set_value name="md.$DADynWarActivateFuneral" exact="if md.$DADynWarActivateFuneral == true then false else true"/>
						<do_if value="md.$DADynWarActivateFuneral == true">
							<set_object_active object="$FuneralGate" activate="true"/>
						</do_if>
						<do_else>
							<set_object_active object="$FuneralGate" activate="false"/>
						</do_else>
						<remove_value name="$HeartOfAcrimonySector"/>
						<remove_value name="$FuneralGate"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarEnable" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarEnable" exact="if md.$DADynWarEnable == true then false else true"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarEnable to %2'.[player.age,md.$DADynWarEnable]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarBesties" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarBesties" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarBesties to %2'.[player.age,md.$DADynWarBesties]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarBigBoost" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarBigBoost" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarBigBoost to %2'.[player.age,md.$DADynWarBigBoost]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarSmallBoost" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarSmallBoost" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarSmallBoost to %2'.[player.age,md.$DADynWarSmallBoost]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarSmallBlow" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarSmallBlow" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarSmallBlow to %2'.[player.age,md.$DADynWarSmallBlow]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarBigBlow" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarBigBlow" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarBigBlow to %2'.[player.age,md.$DADynWarBigBlow]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarNemesis" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarNemesis" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarNemesis to %2'.[player.age,md.$DADynWarNemesis]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<cue name="DADynWarNothing" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DADynWarNothing" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- Updated md.$DADynWarNothing to %2'.[player.age,md.$DADynWarNothing]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
					</actions>
				</cue>
				<library name="Lib_GetFactions">
					<actions>
						<do_if value="$FactionList?">
							<clear_list list="$FactionList"/>
						</do_if>
						<do_else>
							<create_list name="$FactionList"/>
						</do_else>
						<do_if value="$EconomicList?">
							<clear_list list="$EconomicList"/>
						</do_if>
						<do_else>
							<create_list name="$EconomicList"/>
						</do_else>
						<do_if value="$VisitorList?">
							<clear_list list="$VisitorList"/>
						</do_if>
						<do_else>
							<create_list name="$VisitorList"/>
						</do_else>
						<do_if value="$ExcludedFactions?">
							<clear_list list="$ExcludedFactions"/>
						</do_if>
						<do_else>
							<create_list name="$ExcludedFactions"/>
						</do_else>
						<!-- Going to use different filtering methods depending on function that calls -->
						<do_if value="$WhatFactions? and $WhatFactions == 'All'">
							<set_value name="$ExcludedFactions" exact="[faction.civilian, faction.criminal, faction.smuggler, faction.visitor]"/>
						</do_if>
						<do_elseif value="$WhatFactions? and $WhatFactions == 'ChangeRelations'">
							<set_value name="$ExcludedFactions" exact="[faction.civilian, faction.criminal, faction.khaak, faction.smuggler, faction.visitor, faction.xenon]"/>
							<append_to_list name="$ExcludedFactions" exact="faction.buccaneers" chance="if (md.$DADynWarBUCLocked? and md.$DADynWarBUCLocked == false) then 0 else 100"/>
							<append_to_list name="$ExcludedFactions" exact="faction.scaleplate" chance="if (md.$DADynWarSCA? and md.$DADynWarSCA == false) then 0 else 100"/>
						</do_elseif>
						<do_elseif value="$WhatFactions? and $WhatFactions == 'DetailView'">
							<set_value name="$ExcludedFactions" exact="[faction.civilian, faction.criminal, faction.khaak, faction.smuggler, faction.visitor, faction.fallensplit]"/>
						</do_elseif>
						<do_else>
							<set_value name="$ExcludedFactions" exact="[faction.civilian, faction.criminal, faction.khaak, faction.smuggler, faction.visitor, faction.xenon, faction.fallensplit]"/>
						</do_else>
						<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- $WhatFactions == %2'.[player.age,$WhatFactions]" context="false" filter="scripts" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
						<set_value name="$TerranFactions" exact="[faction.terran, faction.pioneers, faction.yaki]"/>
						<set_value name="$SplitFactions" exact="[faction.court, faction.fallensplit, faction.freesplit, faction.split]"/>
						<get_factions_by_tag tag="tag.claimspace" result="$FactionList"/>
						<get_factions_by_tag tag="tag.economic" result="$EconomicList"/>
						<get_factions_by_tag tag="tag.visitor" result="$VisitorList"/>
						<remove_from_list name="$EconomicList" list="$FactionList" multiple="true"/>
						<remove_from_list name="$TerranFactions" list="$FactionList" multiple="true"/>
						<remove_from_list name="$SplitFactions" list="$FactionList" multiple="true"/>
						<append_list_elements name="$FactionList" other="$EconomicList"/>
						<append_list_elements name="$FactionList" other="$TerranFactions"/>
						<append_list_elements name="$FactionList" other="$SplitFactions"/>
						<remove_from_list name="$FactionList" list="$VisitorList" multiple="true"/>
						<remove_from_list name="$FactionList" list="$ExcludedFactions" multiple="true"/>
						<do_all exact="$FactionList.count" counter="$B" reverse="true">
							<do_if value="($FactionList.{$B} == null) or ($FactionList.{$B}.isactive != true)">
								<remove_value name="$FactionList.{$B}"/>
							</do_if>
						</do_all>
						<sort_list list="$FactionList" sortbyvalue="loop.element.knownname"/>
						<!-- $FactionList has the factions we care about -->
					</actions>
				</library>
				<library name="Lib_Add_Faction_Dropdown">
					<actions>
						<include_actions ref="Lib_GetFactions"/>
						<!--Figure out which entry is currently selected.-->
						<set_value name="$dropdown_index" exact="$FactionList.indexof.{DeadAir.$DynamicWarDiplomacyFaction}"/>
						<!--Translate to list of tables, that pair factions with names.-->
						<set_value name="$options_list" exact="[]"/>
						<do_for_each name="$faction" in="$FactionList">
							<set_value name="$name" exact="'%s'.[$faction.knownname]"/>
							<append_to_list name="$options_list" exact="table[
							$text = $name,
							$value = $faction,
							]"/>
						</do_for_each>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col = 1,
							$colSpan = 2,
							$text = 'Faction:',
							]"/>
						<!--Have this stretch over extra columns.-->
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Dropdown" param="table[
							$col = 3, 
							$options = $options_list,
							$startOption = $dropdown_index,
							$colSpan = event.param.$columns - 2,
							$onDropDownConfirmed = Handle_Option_Change,
							$echo = table[
								$type  = 'dropdown',
								$name  = '$DynamicWarDiplomacyFaction',
								$refresh = true,
								],
							]"/>
					</actions>
				</library>
				<library name="Lib_FactionRelationBar">
					<actions>
						<do_if value="$FactionOne and $FactionTwo">
							<set_value name="$Current" exact="$FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue + 30"/>
							<set_value name="$Relation" exact="$FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue"/>
							<set_value name="$RelationColor" exact="'Helper.color.transparent'"/>
							<do_if value="$Relation le (-20)">
								<set_value name="$PositiveColor" exact="'Helper.color.transparent'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.red'"/>
							</do_if>
							<do_elseif value="$Relation le (-10) and $Relation gt (-20)">
								<set_value name="$PositiveColor" exact="'Helper.color.transparent'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.orange'"/>
							</do_elseif>
							<do_elseif value="$Relation le (-1) and $Relation gt (-10)">
								<set_value name="$PositiveColor" exact="'Helper.color.transparent'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.yellow'"/>
							</do_elseif>
							<do_elseif value="$Relation le (1) and $Relation gt (-1)">
								<set_value name="$PositiveColor" exact="'Helper.color.yellow'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$Relation le (10) and $Relation gt (1)">
								<set_value name="$PositiveColor" exact="'Helper.color.playergreen'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$Relation lt (20) and $Relation gt (10)">
								<set_value name="$PositiveColor" exact="'Helper.color.lightgreen'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<do_elseif value="$Relation ge (20)">
								<set_value name="$PositiveColor" exact="'Helper.color.green'"/>
								<set_value name="$NegativeColor" exact="'Helper.color.transparent'"/>
							</do_elseif>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=4,
								$colSpan=1,
								$halign='center',
								$text = $Relation,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_StatusBar" param="table[
								$col			= 5,
								$colSpan		= 3,
								$scaling		= true,
								$type			= 'statusbar',
								$start			= 30,
								$current		= $Current,
								$max			= 60,
								$valueColor		= $RelationColor,
								$posChangeColor	= $PositiveColor,
								$negChangeColor	= $NegativeColor,
								]"/>
						</do_if>
					</actions>
				</library>
				<library name="Lib_Relation_Increase_Cost">
					<actions>
						<!-- Uses $FactionOne and $FactionTwo -->
						<!-- This library will create a table with [$FactionOne, $FactionTwo, $Cost] -->
						<set_value name="$CostFound" exact="false"/>
						<do_if value="not $IncreaseRelationsCostTable?">
							<set_value name="$IncreaseRelationsCostTable" exact="table[]"/>
						</do_if>
						<do_if value="$FactionOne and $FactionTwo">
							<do_if value="$IncreaseRelationsCostTable.{$FactionOne}? and $IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}?">
								<!-- Update our entry -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}" exact="if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost"/>
								<set_value name="$CostFound" exact="true"/>
							</do_if>
							<do_elseif value="$IncreaseRelationsCostTable.{$FactionOne}? and (not $IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}?)">
								<!-- We have the top level table, but not the specific entry -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$IncreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}" exact="if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost"/>
								<set_value name="$CostFound" exact="true"/>
							</do_elseif>
							<do_else>
								<!-- We have nothing sadface -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$IncreaseRelationsCostTable.{$FactionOne}" exact="table[{$FactionTwo}=(if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost)]"/>
								<set_value name="$CostFound" exact="true"/>
							</do_else>
						</do_if>
					</actions>
				</library>
				<library name="Lib_Relation_Decrease_Cost">
					<actions>
						<!-- Uses $FactionOne and $FactionTwo -->
						<!-- This library will create a table with [$FactionOne, $FactionTwo, $Cost] -->
						<set_value name="$CostFound" exact="false"/>
						<do_if value="not $DecreaseRelationsCostTable?">
							<set_value name="$DecreaseRelationsCostTable" exact="table[]"/>
						</do_if>
						<do_if value="$FactionOne and $FactionTwo">
							<set_value name="$PlayerChange" exact="false"/>
							<do_if value="($FactionOne == faction.player) or ($FactionTwo == faction.player)">
								<set_value name="$PlayerChange" exact="true"/>
							</do_if>
							<do_if value="$DecreaseRelationsCostTable.{$FactionOne}? and $DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}?">
								<!-- Update our entry -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}" exact="if ($PlayerChange) then 0Cr else (if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost)"/>
								<set_value name="$CostFound" exact="true"/>
							</do_if>
							<do_elseif value="$DecreaseRelationsCostTable.{$FactionOne}? and (not $DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}?)">
								<!-- We have the top level table, but not the specific entry -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$DecreaseRelationsCostTable.{$FactionOne}.{$FactionTwo}" exact="if ($PlayerChange) then 0Cr else (if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost)"/>
								<set_value name="$CostFound" exact="true"/>
							</do_elseif>
							<do_else>
								<!-- We have nothing sadface -->
								<include_actions ref="Lib_Calculate_Cost"/>
								<set_value name="$DecreaseRelationsCostTable.{$FactionOne}" exact="table[{$FactionTwo}=(if ($PlayerChange) then 0Cr else (if (@md.$DADynWarFavors.{$FactionOne} gt 0) then 0Cr else $Cost))]"/>
								<set_value name="$CostFound" exact="true"/>
							</do_else>
						</do_if>
						<remove_value name="$PlayerChange"/>
					</actions>
				</library>
				<library name="Lib_Calculate_Cost">
					<actions>
						<!-- Uses $FactionOne and $FactionTwo -->
						<!-- This library will create $Cost -->
						<set_value name="$Cost" exact="0"/>
						<set_value name="$Relation" exact="$FactionOne.relationto.{$FactionTwo}"/>
						<set_value name="$NetWorth" exact="player.money"/>
						<set_value name="md.$DADynWarFavors.{faction.player}" exact="0"/>
						<do_if value="$Relation le 0">
							<do_if value="$Relation le -1">
								<set_value name="$Cost" exact="[50000000Cr, ($NetWorth * 15 / 1000)].max"/>
							</do_if>
							<do_elseif value="$Relation le -0.32">
								<set_value name="$Cost" exact="[35000000Cr, ($NetWorth * 10 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation le -0.1">
								<set_value name="$Cost" exact="[22500000Cr, ($NetWorth * 5 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation le -0.032">
								<set_value name="$Cost" exact="[15000000Cr, ($NetWorth * 4 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation le -0.01">
								<set_value name="$Cost" exact="[7500000Cr, ($NetWorth * 3 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation le -0.0032">
								<set_value name="$Cost" exact="[2500000Cr, ($NetWorth * 2 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation le 0">
								<set_value name="$Cost" exact="[500000Cr, ($NetWorth * 1 / 1000)].max"/>
							</do_elseif>
							<do_else>
								<set_value name="$Cost" exact="[500000Cr, ($NetWorth * 1 / 1000)].max"/>
								<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- ERROR calculating cost -- %2 -- %3 -- %4'.[player.age,$FactionOne.knownname,$FactionTwo.knownname,$Relation]" context="false" filter="error" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
							</do_else>
						</do_if>
						<do_else>
							<do_if value="$Relation ge 1">
								<set_value name="$Cost" exact="[50000000Cr, ($NetWorth * 15 / 1000)].max"/>
							</do_if>
							<do_elseif value="$Relation ge 0.32">
								<set_value name="$Cost" exact="[35000000Cr, ($NetWorth * 10 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation ge 0.1">
								<set_value name="$Cost" exact="[22500000Cr, ($NetWorth * 5 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation ge 0.032">
								<set_value name="$Cost" exact="[15000000Cr, ($NetWorth * 4 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation ge 0.01">
								<set_value name="$Cost" exact="[7500000Cr, ($NetWorth * 3 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation ge 0.0032">
								<set_value name="$Cost" exact="[2500000Cr, ($NetWorth * 2 / 1000)].max"/>
							</do_elseif>
							<do_elseif value="$Relation ge 0">
								<set_value name="$Cost" exact="[500000Cr, ($NetWorth * 1 / 1000)].max"/>
							</do_elseif>
							<do_else>
								<set_value name="$Cost" exact="[5000000Cr, ($NetWorth * 1 / 1000)].max"/>
								<debug_text text="'MOD: DeadAirDynamicWarsDiplomacy -- %1 -- ERROR calculating cost -- %2 -- %3 -- %4'.[player.age,$FactionOne.knownname,$FactionTwo.knownname,$Relation]" context="false" filter="error" chance="if $DynamicWarDiplomacyDebugChance? then ($DynamicWarDiplomacyDebugChance * 100) else 0"/>
							</do_else>
						</do_else>
					</actions>
				</library>
				<library name="Lib_CalculateUiValueRepChange">
					<actions>
						<!-- 1.0 = 30		0.32 = 25		0.1 = 20		0.032 = 15		0.01 = 10		0.0032 = 5 -->
						<!-- 1.0 = 30		0.316 = 25		0.1 = 20		0.0316 = 15		0.01 = 10		0.00316 = 5 -->
						<!-- Requires $SelectedFactionOne, $SelectedFactionTwo, and $UIRelationChange -->
						<!-- Returns $NewAbsoluteRepValue and $AbsoluteRepValueChange -->
						<do_if value="$UIRelationChange != 0">
							<set_value name="$OldUIRepValue" exact="$SelectedFactionOne.relation.{$SelectedFactionOne.relationto.{$SelectedFactionTwo}}.uivalue"/>
							<set_value name="$OldAbsoluteRepValue" exact="$SelectedFactionOne.relationto.{$SelectedFactionTwo}"/>
							<do_if value="($OldUIRepValue ge 5) or ($OldUIRepValue le -5)">
								<set_value name="$NewUIRepValue" exact="$OldUIRepValue + $UIRelationChange"/>
								<!-- =(10^(SQRT((S2+T2)^2)/10)/1000)*IF(S2+T2<0,-1,1) -->
								<set_value name="$NewAbsoluteRepValue" exact="(10^(sqrt(($OldUIRepValue + $UIRelationChange) ^ 2)/10) / 1000) * (if ($OldUIRepValue + $UIRelationChange lt 0) then -1 else 1)"/>
								<do_if value="$NewAbsoluteRepValue lt -1">
									<set_value name="$NewAbsoluteRepValue" exact="-1"/>
								</do_if>
								<do_if value="$NewAbsoluteRepValue gt 1">
									<set_value name="$NewAbsoluteRepValue" exact="1"/>
								</do_if>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_if>
							<do_elseif value="($OldUIRepValue lt 5) and ($OldUIRepValue gt -5)">
								<set_value name="$NewUIRepValue" exact="$OldUIRepValue + $UIRelationChange"/>
								<set_value name="$NewAbsoluteRepValue" exact="$OldAbsoluteRepValue + ($UIRelationChange * 0.00064)"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
							<!-- Force Rounding is ugly but oh well -->
							<!-- Round near 25 -->
							<do_if value="($NewAbsoluteRepValue le 0.3238) and ($NewAbsoluteRepValue ge 0.3161)">
								<set_value name="$NewAbsoluteRepValue" exact="0.32"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_if>
							<do_elseif value="($NewAbsoluteRepValue ge -0.3238) and ($NewAbsoluteRepValue le -0.3161)">
								<set_value name="$NewAbsoluteRepValue" exact="-0.32"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
							<!-- Round near 15 -->
							<do_elseif value="($NewAbsoluteRepValue le 0.03238) and ($NewAbsoluteRepValue ge 0.03161)">
								<set_value name="$NewAbsoluteRepValue" exact="0.032"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
							<do_elseif value="($NewAbsoluteRepValue ge -0.03238) and ($NewAbsoluteRepValue le -0.03161)">
								<set_value name="$NewAbsoluteRepValue" exact="-0.032"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
							<!-- Round near 5 -->
							<do_elseif value="($NewAbsoluteRepValue le 0.003238) and ($NewAbsoluteRepValue ge 0.003161)">
								<set_value name="$NewAbsoluteRepValue" exact="0.0032"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
							<do_elseif value="($NewAbsoluteRepValue ge -0.003238) and ($NewAbsoluteRepValue le -0.003161)">
								<set_value name="$NewAbsoluteRepValue" exact="-0.0032"/>
								<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue"/>
							</do_elseif>
						</do_if>
					</actions>
				</library>
				<library name="Lib_AddFactionMilStrengthRows">
					<actions>
						<do_if value="$FactionOne">
							<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
							<find_ship_by_true_owner name="$XLShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$XLDockedShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$XLDockedShips" list="$XLShips" multiple="true"/>
							<append_list_elements name="$XLShips" other="$XLDockedShips"/>
							<find_ship_by_true_owner name="$LShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$LDockedShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$LDockedShips" list="$LShips" multiple="true"/>
							<append_list_elements name="$LShips" other="$LDockedShips"/>
							<find_ship_by_true_owner name="$MShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$MDockedShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$MDockedShips" list="$MShips" multiple="true"/>
							<append_list_elements name="$MShips" other="$MDockedShips"/>
							<find_ship_by_true_owner name="$SShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$SDockedShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.fight"/>
									<match primarypurpose="purpose.auxiliary"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$SDockedShips" list="$SShips" multiple="true"/>
							<append_list_elements name="$SShips" other="$SDockedShips"/>
							<set_value name="$TotalShips" exact="$XLShips.count + $LShips.count + $MShips.count + $SShips.count"/>
							<set_value name="$Text" exact="$FactionOne.knownname"/>
							<set_value name="$Text2" exact="{33232471,405}.[(if $TotalShips gt 0 then $TotalShips else 0)]" comment="Total mil Ships"/>
							<set_value name="$Text3" exact="{33232471,406}.[(if $XLShips.count gt 0 then $XLShips.count else 0)]" comment="Total XL mil Ships"/>
							<set_value name="$Text4" exact="{33232471,407}.[(if $LShips.count gt 0 then $LShips.count else 0)]" comment="Total L mil Ships"/>
							<set_value name="$Text5" exact="{33232471,408}.[(if $MShips.count gt 0 then $MShips.count else 0)]" comment="Total M mil Ships"/>
							<set_value name="$Text6" exact="{33232471,409}.[(if $SShips.count gt 0 then $SShips.count else 0)]" comment="Total S mil Ships"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=1,
								$colSpan=2,
								$text = $Text,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=3,
								$colSpan=1,
								$text = $Text2,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=4,
								$colSpan=1,
								$text = $Text3,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=5,
								$colSpan=1,
								$text = $Text4,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=6,
								$colSpan=1,
								$text = $Text5,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=7,
								$colSpan=1,
								$text = $Text6,
								]"/>
						</do_if>
					</actions>
				</library>
				<library name="Lib_AddFactionEconStrengthRows">
					<actions>
						<do_if value="$FactionOne">
							<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
							<!-- XL -->
							<find_ship_by_true_owner name="$XLTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$XLDockedTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$XLDockedTradeShips" list="$XLTradeShips" multiple="true"/>
							<append_list_elements name="$XLTradeShips" other="$XLDockedTradeShips"/>
							<set_value name="$MouseOverText3a" exact="{1001,9010} + ':' + [@$XLTradeShips.count,0].max"/>
							<find_ship_by_true_owner name="$XLBuildShips" multiple="true" checkoperational="true" primarypurpose="purpose.build" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$XLDockedBuildShips" multiple="true" checkoperational="true" primarypurpose="purpose.build" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$XLDockedBuildShips" list="$XLBuildShips" multiple="true"/>
							<append_list_elements name="$XLBuildShips" other="$XLDockedBuildShips"/>
							<set_value name="$MouseOverText3b" exact="{1001,9012} + ':' + [@$XLBuildShips.count,0].max"/>
							<find_ship_by_true_owner name="$XLOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.mine"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$XLDockedOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_xl" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.mine"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$XLDockedOtherShips" list="$XLOtherShips" multiple="true"/>
							<append_list_elements name="$XLOtherShips" other="$XLDockedOtherShips"/>
							<set_value name="$MouseOverText3c" exact="{1001,9014} + ':' + [@$XLOtherShips.count,0].max"/>
							<set_value name="$XLShips" exact="([@$XLTradeShips.count,0].max) + ([@$XLBuildShips.count,0].max) + ([@$XLOtherShips.count,0].max)"/>
							<set_value name="$MouseOverText3" exact="$FactionOne.knownname + ' ' + {1001,48} + ': ' + $MouseOverText3a + ' ' + $MouseOverText3b + ' ' + $MouseOverText3c"/>
							<!-- L -->
							<find_ship_by_true_owner name="$LTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$LDockedTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$LDockedTradeShips" list="$LTradeShips" multiple="true"/>
							<append_list_elements name="$LTradeShips" other="$LDockedTradeShips"/>
							<set_value name="$MouseOverText4a" exact="{1001,9010} + ':' + [@$LTradeShips.count,0].max"/>
							<find_ship_by_true_owner name="$LMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$LDockedMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$LDockedMineShips" list="$LMineShips" multiple="true"/>
							<append_list_elements name="$LMineShips" other="$LDockedMineShips"/>
							<set_value name="$MouseOverText4b" exact="{1001,9013} + ':' + [@$LMineShips.count,0].max"/>
							<find_ship_by_true_owner name="$LOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$LDockedOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_l" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$LDockedOtherShips" list="$LOtherShips" multiple="true"/>
							<append_list_elements name="$LOtherShips" other="$LDockedOtherShips"/>
							<set_value name="$MouseOverText4c" exact="{1001,9014} + ':' + [@$LOtherShips.count,0].max"/>
							<set_value name="$LShips" exact="([@$LTradeShips.count,0].max) + ([@$LMineShips.count,0].max) + ([@$LOtherShips.count,0].max)"/>
							<set_value name="$MouseOverText4" exact="$FactionOne.knownname + ' ' + {1001,49} + ': ' + $MouseOverText4a + ' ' + $MouseOverText4b + ' ' + $MouseOverText4c"/>
							<!-- M -->
							<find_ship_by_true_owner name="$MTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$MDockedTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$MDockedTradeShips" list="$MTradeShips" multiple="true"/>
							<append_list_elements name="$MTradeShips" other="$MDockedTradeShips"/>
							<set_value name="$MouseOverText5a" exact="{1001,9010} + ':' + [@$MTradeShips.count,0].max"/>
							<find_ship_by_true_owner name="$MMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$MDockedMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$MDockedMineShips" list="$MMineShips" multiple="true"/>
							<append_list_elements name="$MMineShips" other="$MDockedMineShips"/>
							<set_value name="$MouseOverText5b" exact="{1001,9013} + ':' + [@$MMineShips.count,0].max"/>
							<find_ship_by_true_owner name="$MOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$MDockedOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_m" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$MDockedOtherShips" list="$MOtherShips" multiple="true"/>
							<append_list_elements name="$MOtherShips" other="$MDockedOtherShips"/>
							<set_value name="$MouseOverText5c" exact="{1001,9014} + ':' + [@$MOtherShips.count,0].max"/>
							<set_value name="$MShips" exact="([@$MTradeShips.count,0].max) + ([@$MMineShips.count,0].max) + ([@$MOtherShips.count,0].max)"/>
							<set_value name="$MouseOverText5" exact="$FactionOne.knownname + ' ' + {1001,50} + ': ' + $MouseOverText5a + ' ' + $MouseOverText5b + ' ' + $MouseOverText5c"/>
							<!-- S -->
							<find_ship_by_true_owner name="$STradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$SDockedTradeShips" multiple="true" checkoperational="true" primarypurpose="purpose.trade" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$SDockedTradeShips" list="$STradeShips" multiple="true"/>
							<append_list_elements name="$STradeShips" other="$SDockedTradeShips"/>
							<set_value name="$MouseOverText6a" exact="{1001,9010} + ':' + [@$STradeShips.count,0].max"/>
							<find_ship_by_true_owner name="$SMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" recursive="true"/>
							<find_ship_by_true_owner name="$SDockedMineShips" multiple="true" checkoperational="true" primarypurpose="purpose.mine" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true"/>
							<remove_from_list name="$SDockedMineShips" list="$SMineShips" multiple="true"/>
							<append_list_elements name="$SMineShips" other="$SDockedMineShips"/>
							<set_value name="$MouseOverText6b" exact="{1001,9013} + ':' + [@$SMineShips.count,0].max"/>
							<!-- OTHER -->
							<find_ship_by_true_owner name="$SOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<find_ship_by_true_owner name="$SDockedOtherShips" multiple="true" checkoperational="true" masstraffic="false" unit="false" class="class.ship_s" space="player.galaxy" faction="$FactionOne" docked="true" recursive="true">
								<match_any>
									<match primarypurpose="purpose.build"/>
									<match primarypurpose="purpose.salvage"/>
									<match primarypurpose="purpose.dismantling"/>
								</match_any>
							</find_ship_by_true_owner>
							<remove_from_list name="$SDockedOtherShips" list="$SOtherShips" multiple="true"/>
							<append_list_elements name="$SOtherShips" other="$SDockedOtherShips"/>
							<set_value name="$MouseOverText6c" exact="{1001,9014} + ':' + [@$SOtherShips.count,0].max"/>
							<set_value name="$SShips" exact="([@$STradeShips.count,0].max) + ([@$SMineShips.count,0].max) + ([@$SOtherShips.count,0].max)"/>
							<set_value name="$MouseOverText6" exact="$FactionOne.knownname + ' ' + {1001,51} + ': ' + $MouseOverText6a + ' ' + $MouseOverText6b + ' ' + $MouseOverText6c"/>
							<!-- Stations -->
							<find_station_by_true_owner name="$Stations" multiple="true" checkoperational="true" space="player.galaxy" faction="$FactionOne"/>
							<!-- Total -->
							<set_value name="$TotalShips" exact="$XLShips + $LShips + $MShips + $SShips"/>
							<set_value name="$Text" exact="$FactionOne.knownname"/>
							<set_value name="$MouseOverText" exact="$FactionOne.knownname"/>
							<set_value name="$Text2" exact="{33232471,405}.[([$TotalShips,0].max)]" comment="Total econ Ships"/>
							<set_value name="$Text3" exact="{33232471,406}.[([$XLShips,0].max)]" comment="Total XL econ Ships"/>
							<set_value name="$Text4" exact="{33232471,407}.[([$LShips,0].max)]" comment="Total L econ Ships"/>
							<set_value name="$Text5" exact="{33232471,408}.[([$MShips,0].max)]" comment="Total M econ Ships"/>
							<set_value name="$Text6" exact="{33232471,409}.[([$SShips,0].max)]" comment="Total S econ Ships"/>
							<set_value name="$Text7" exact="{33232471,411}.[([@$Stations.count,0].max)]" comment="Total Stations"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=1,
								$colSpan=2,
								$mouseOverText=$MouseOverText,
								$text = $Text,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=3,
								$colSpan=1,
								$text = $Text2,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=4,
								$colSpan=1,
								$mouseOverText=$MouseOverText3,
								$text = $Text3,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=5,
								$colSpan=1,
								$mouseOverText=$MouseOverText4,
								$text = $Text4,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=6,
								$colSpan=1,
								$mouseOverText=$MouseOverText5,
								$text = $Text5,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=7,
								$colSpan=1,
								$mouseOverText=$MouseOverText6,
								$text = $Text6,
								]"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col=8,
								$colSpan=1,
								$text = $Text7,
								]"/>
						</do_if>
					</actions>
				</library>
				<!-- This code was done by SirNukes, all credit given -->
				<library name="Lib_Get_Stations">
					<actions>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction != null">
							<find_station_by_true_owner groupname="$stations" faction="DeadAir.$DynamicWarDiplomacyFaction" space="player.galaxy" multiple="true"/>
							<do_if value="@$include_buildstorage">
								<!--Add build storage modules for each station; these are also containers with their own cargo/etc data.-->
								<create_group groupname="$buildstorages"/>
								<do_for_each name="$station" in="$stations">
									<do_if value="$station.buildstorage? and $station.buildstorage != null">
										<add_to_group groupname="$buildstorages" object="$station.buildstorage"/>
									</do_if>
								</do_for_each>
								<add_to_group groupname="$stations" group="$buildstorages"/>
								<remove_value name="$buildstorages"/>
							</do_if>
						</do_if>
					</actions>
				</library>
				<!-- This code was done by SirNukes, all credit given -->
				<library name="Lib_Get_Ships">
					<actions>
						<do_if value="DeadAir.$DynamicWarDiplomacyFaction != null">
							<find_ship_by_true_owner groupname="$ships" faction="DeadAir.$DynamicWarDiplomacyFaction" multiple="true" masstraffic="false" space="player.galaxy" functional="true"/>
						</do_if>
					</actions>
				</library>
				<!-- This code was done by SirNukes, all credit given -->
				<library name="Lib_Add_Horizontal_Line">
					<actions>
						<!-- Horizontal line, ego style: make empty text widget wide, thin,and lightly colored. -->
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row" param="table[$selectable = false]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
								$col = 1, 
								$colSpan = event.param.$columns,
								$height = $thickness,
								$fontsize = 1,
								$cellBGColor = 'Helper.color.grey',
							]"/>
					</actions>
				</library>
			</cues>
		</cue>
	</cues>
</mdscript>